name: Publish to MCP Registry
# https://github.com/modelcontextprotocol/registry/blob/main/docs/guides/publishing/github-actions.md

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Validate server.json
        run: |
          # Basic JSON validation
          if ! python3 -m json.tool server.json > /dev/null 2>&1; then
            echo "❌ server.json is not valid JSON"
            exit 1
          fi
          echo "✅ server.json is valid JSON"
          
          # Validate remote endpoints are accessible
          echo "🔍 Validating remote endpoints..."
          for url in $(python3 -c "import json; data=json.load(open('server.json')); [print(remote['url']) for remote in data.get('remotes', [])]"); do
            if curl -s --head "$url" > /dev/null; then
              echo "✅ Endpoint accessible: $url"
            else
              echo "⚠️  Endpoint may require authentication: $url"
            fi
          done

      - name: Install MCP Publisher
        run: |
          curl -L "https://github.com/modelcontextprotocol/registry/releases/download/v1.0.0/mcp-publisher_1.0.0_$(uname -s | tr '[:upper:]' '[:lower:]')_$(uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/').tar.gz" | tar xz mcp-publisher

      - name: Prepare private key
        if: env.MCP_PUBLISH_PRIVATE_KEY != ''
        run: echo "${{ secrets.MCP_PUBLISH_PRIVATE_KEY }}" > key.pem
        env:
          MCP_PUBLISH_PRIVATE_KEY: ${{ secrets.MCP_PUBLISH_PRIVATE_KEY }}

      - name: Login to MCP Registry (DNS)
        if: env.MCP_PUBLISH_PRIVATE_KEY != ''
        run: ./mcp-publisher login dns --domain prisma.io --private-key $(openssl pkey -in key.pem -noout -text | grep -A3 "priv:" | tail -n +2 | tr -d ' :\n')
        env:
          MCP_PUBLISH_PRIVATE_KEY: ${{ secrets.MCP_PUBLISH_PRIVATE_KEY }}


      - name: Publish to MCP Registry
        run: ./mcp-publisher publish

      - name: Clean up private key
        if: always() && env.MCP_PUBLISH_PRIVATE_KEY != ''
        run: rm -f key.pem
        env:
          MCP_PUBLISH_PRIVATE_KEY: ${{ secrets.MCP_PUBLISH_PRIVATE_KEY }}